---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: push-proxy
spec:
  selector:
    matchLabels:
      app: push-proxy
  template:
    metadata:
      labels:
        app: push-proxy
    spec:
      containers:
        - name: push-proxy
          image: "{{ .Values.imageNextcloudPushProxy }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              port: http
              path: /health
          livenessProbe:
            httpGet:
              port: http
              path: /health
          volumeMounts:
            - mountPath: /data
              name: push-proxy
      volumes:
        - name: push-proxy
          persistentVolumeClaim:
            claimName: push-proxy

---
kind: Service
apiVersion: v1
metadata:
  name: push-proxy
spec:
  type: {{ .Values.push_proxy.service.type }}
  ports:
    - port: {{ .Values.push_proxy.service.port }}
      targetPort: http
  selector:
    app: push-proxy

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: push-proxy
{{ if .Values.push_proxy.ingress.annotations }}
  annotations:
{{ toYaml .Values.push_proxy.ingress.annotations | indent 4 }}
{{ end }}
spec:
  {{ if .Values.push_proxy.ingress.className }}
  ingressClassName: {{ .Values.push_proxy.ingress.className }}
  {{ end }}
  rules:
    - host: {{ .Values.push_proxy.ingress.host }}
      http:
        paths:
          - path: {{ .Values.push_proxy.ingress.path }}
            pathType: {{ .Values.push_proxy.ingress.pathType }}
            backend:
              service:
                name: push-proxy
                port:
                  number: {{ .Values.push_proxy.service.port }}
{{ if .Values.push_proxy.ingress.tls }}
  tls:
{{ toYaml .Values.push_proxy.ingress.tls | indent 4 }}
{{ end }}


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: push-proxy
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteOnce
